class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> sk = new Stack();
        boolean flag = false;
        //if asteroids is + then it doesnt go through stack, if negative it runs through stack as long as stack is positive
        for(int i = 0;i<asteroids.length;i++){
            if(!sk.isEmpty() && sk.peek() > 0 && asteroids[i] < 0 && sk.peek() == Math.abs(asteroids[i])){
                sk.pop();
            }
            else if(!sk.isEmpty() && sk.peek() > 0 && asteroids[i] < 0){
                while(!sk.isEmpty() && sk.peek() > 0 && Math.abs(asteroids[i]) >= sk.peek()){
                    if(Math.abs(asteroids[i]) == sk.peek()){
                        sk.pop();
                        flag = true;
                        break;
                    }
                    sk.pop();
                }
                if((sk.isEmpty() || sk.peek() < 0) && !flag){
                    sk.push(asteroids[i]);
                }
                flag = false;
            }
            else{
                sk.push(asteroids[i]);
            }
        }
        int[] result = new int[sk.size()];
        for(int i = sk.size()-1;i>=0;i--){
            result[i] = sk.pop();
        }
        return result;
    }
}